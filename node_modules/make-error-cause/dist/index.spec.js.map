{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../src/index.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,gCAAkC;AAClC,6BAA8B;AAC9B,iCAA8D;AAE9D,IAAI,CAAC,kBAAkB,EAAE,UAAA,CAAC;IACxB;QAAwB,6BAAS;QAAjC;;QAAmC,CAAC;QAAD,gBAAC;IAAD,CAAC,AAApC,CAAwB,iBAAS,GAAG;IACpC;QAA2B,gCAAS;QAApC;;QAAsC,CAAC;QAAD,mBAAC;IAAD,CAAC,AAAvC,CAA2B,SAAS,GAAG;IAEvC,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAA,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;QAChC,IAAM,SAAS,GAAG,IAAI,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;QACpD,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAA;QAElE,CAAC,CAAC,KAAK,CAAC,iBAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;QACtC,CAAC,CAAC,EAAE,CAAC,KAAK,YAAY,KAAK,CAAC,CAAA;QAE5B,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;QAC/B,CAAC,CAAC,KAAK,CAAC,iBAAS,CAAC,SAAS,CAAC,EAAE,KAAG,SAAS,CAAC,KAAK,GAAG,sBAAc,GAAG,KAAK,CAAC,KAAO,CAAC,CAAA;QAClF,CAAC,CAAC,KAAK,CAAC,cAAO,CAAC,SAAS,CAAC,EAAE,iBAAS,CAAC,SAAS,CAAC,CAAC,CAAA;QACjD,CAAC,CAAC,EAAE,CAAC,SAAS,YAAY,KAAK,CAAC,CAAA;QAChC,CAAC,CAAC,EAAE,CAAC,SAAS,YAAY,iBAAS,CAAC,CAAA;QACpC,CAAC,CAAC,EAAE,CAAC,SAAS,YAAY,SAAS,CAAC,CAAA;QAEpC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;QACtC,CAAC,CAAC,KAAK,CAAC,iBAAS,CAAC,YAAY,CAAC,EAAE,KAAG,YAAY,CAAC,KAAK,GAAG,sBAAc,GAAG,SAAS,CAAC,KAAK,GAAG,sBAAc,GAAG,KAAK,CAAC,KAAO,CAAC,CAAA;QAC3H,CAAC,CAAC,KAAK,CAAC,cAAO,CAAC,YAAY,CAAC,EAAE,iBAAS,CAAC,YAAY,CAAC,CAAC,CAAA;QACvD,CAAC,CAAC,EAAE,CAAC,YAAY,YAAY,KAAK,CAAC,CAAA;QACnC,CAAC,CAAC,EAAE,CAAC,YAAY,YAAY,iBAAS,CAAC,CAAA;QACvC,CAAC,CAAC,EAAE,CAAC,YAAY,YAAY,SAAS,CAAC,CAAA;QACvC,CAAC,CAAC,EAAE,CAAC,YAAY,YAAY,YAAY,CAAC,CAAA;QAE1C,CAAC,CAAC,GAAG,EAAE,CAAA;IACT,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import test = require('blue-tape')\nimport { inspect } from 'util'\nimport { BaseError, fullStack, SEPARATOR_TEXT } from './index'\n\ntest('make error cause', t => {\n  class TestError extends BaseError {}\n  class SubTestError extends TestError {}\n\n  t.test('render the cause', t => {\n    const cause = new Error('boom!')\n    const testError = new TestError('test boom!', cause)\n    const subTestError = new SubTestError('sub test boom!', testError)\n\n    t.equal(fullStack(cause), cause.stack)\n    t.ok(cause instanceof Error)\n\n    t.equal(testError.cause, cause)\n    t.equal(fullStack(testError), `${testError.stack}${SEPARATOR_TEXT}${cause.stack}`)\n    t.equal(inspect(testError), fullStack(testError))\n    t.ok(testError instanceof Error)\n    t.ok(testError instanceof BaseError)\n    t.ok(testError instanceof TestError)\n\n    t.equal(subTestError.cause, testError)\n    t.equal(fullStack(subTestError), `${subTestError.stack}${SEPARATOR_TEXT}${testError.stack}${SEPARATOR_TEXT}${cause.stack}`)\n    t.equal(inspect(subTestError), fullStack(subTestError))\n    t.ok(subTestError instanceof Error)\n    t.ok(subTestError instanceof BaseError)\n    t.ok(subTestError instanceof TestError)\n    t.ok(subTestError instanceof SubTestError)\n\n    t.end()\n  })\n})\n"]}